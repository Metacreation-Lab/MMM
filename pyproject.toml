
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "MMM"
version = "0.0.1"
description = "Multitrack Machine Machine model."
readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE"}
requires-python = ">=3.8.0"
authors = [
    { name = "Davide Rizzotti" },
    { name = "Paul Triana" },
    { name = "Nathan Fradet" },
]
keywords = [
    "artificial intelligence",
    "deep learning",
    "transformer",
    "midi",
    "music",
    "mir",
]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Sound/Audio :: MIDI",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
dependencies = [
    "datasets",
    "numpy>=1.20.0",
    "miditok>=3.0.4",
    "torch>=2.0.0",
    "tqdm>=4.0.0",
    "pytest",
]

[project.optional-dependencies]
train = [
    "accelerate~=0.33.0",
    "deepspeed~=0.14.0",
    "tensorboard~=2.17.0",
    "transformers>=4.43.3",
    "flash_attn",  # require pre-compiled wheel
]
tests = [
    "pytest-cov",
    "pytest-xdist[psutil]",
]
docs = [
    "furo",  # theme
    "sphinx-copybutton",
]

[project.urls]
Homepage = "https://github.com/Metacreation-Lab/MMM"
Documentation = "https://mmm.readthedocs.io"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
path = "mmm/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/mmm",
]

[mypy]
warn_return_any = "True"
warn_unused_configs = "True"
plugins = "numpy.typing.mypy_plugin"
exclude = [
    "venv",
    ".venv",
]

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
extend-select = [
    "ARG",
    "A",
    "ANN",
    "B",
    "BLE",
    "C4",
    "COM",
    "D",
    "E",
    "EM",
    "EXE",
    "F",
    "FA",
    "FBT",
    "G",
    "I",
    "ICN",
    "INP",
    "INT",
    "ISC",
    "N",
    "NPY",
    "PERF",
    "PGH",
    "PTH",
    "PIE",
    # "PL",
    "PT",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    # "SLF",
    "SIM",
    "T",
    "TCH",
    "TID",
    "UP",
    "W",
]

ignore = [
    "ANN003",
    "ANN101",
    "ANN102",
    "B905",
    "COM812",
    "D107",
    "D203",
    "D212",
    "FBT001",
    "FBT002",
    "UP038",
    "S105",
    "S311",
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "ANN201",  # allow no return type hint for pytest methods
    "D103",  # no need to document pytest methods
    "S101",  # allow assertions in tests
    "T201",  # print allowed
]
"docs/conf.py" = ["INP001"]  # not a package
